{
  "service": {
    "service": "wechirka-server-v1",
    "serviceObject": {
      "name": "wechirka-server-v1"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "memorySize": 512,
      "stage": "dev",
      "timeout": 15,
      "region": "eu-central-1",
      "environment": {
        "SECRET_KEY": "6l9wa9SsJJlslo763xYKuU5O12PG",
        "ACCESS_KEY_ID": "AKIAU5P4GNTCFKXU6GFS",
        "SECRET_ACCESS_KEY": "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",
        "REGION": "eu-central-1",
        "GOOGLE_CLIENT_SECRET": "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",
        "GOOGLE_CLIENT_ID": "389674739659-cq6hbi3kpcqem58qk6v34oskkvjjk5ok.apps.googleusercontent.com",
        "GOOGLE_CALLBACK_URL": "https://pg78qwpfbg.execute-api.eu-central-1.amazonaws.com/default/wechirka-server-v1/users/google/redirect",
        "FACEBOOK_ID": "163902460092671",
        "FACEBOOK_SECRET": "cf49fe88f7f93847e23871567820896c",
        "FACEBOOK_CALLBACK_URL": "https://pg78qwpfbg.execute-api.eu-central-1.amazonaws.com/default/wechirka-server-v1/users/facebook/redirect",
        "BOT_TELEGRAM": "6466075221:AAF4BcsRJ9kFl63hG_AU-bvAa-vR_OE9R64",
        "BOT_VIBER": "51c517dedc67e433-2810622e3b7155a2-a63799b35dba297f",
        "FRONT_LINK": "https://www.wechirka.com/",
        "BACK_LINK": "https://pg78qwpfbg.execute-api.eu-central-1.amazonaws.com/default/wechirka-server-v1",
        "VIBER_ACCESS_TOKEN": "51c517dedc67e433-2810622e3b7155a2-a63799b35dba297f",
        "CLOUDINARY_CLOUD_NAME": "dciy3u6un",
        "CLOUDINARY_API_KEY": "882542473673359",
        "CLOUDINARY_API_SECRET": "yqwS02uGAjiVsYkd-kn9Df-VaCk",
        "AVATAR": "https://res.cloudinary.com/dciy3u6un/image/upload/v1701114073/service/kglf7c13u3aagffbdlmo.png",
        "MASTER": "https://res.cloudinary.com/dciy3u6un/image/upload/v1701114073/service/kidn51ekkbiuqne4mbpl.jpg",
        "NOREPLY_MAIL": "noreply@wechirka.com",
        "NOREPLY_PASSWORD": "PQ4HHVA%",
        "NGROK_AUTHTOKEN": "2Zu5t7NbioH6TDe8xUNaP2YhAIF_83Wi4oWAxWZrTfas5haji",
        "CODE_LINK": "https://www.wechirka.com/sms-check",
        "VIBER_AVATAR": "https://res.cloudinary.com/dciy3u6un/image/upload/v1701947849/service/paanrsds5krezvpreog0.webp"
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "MainLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/wechirka-server-v1-dev-main"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "wechirka-server-v1",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wechirka-server-v1-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/wechirka-server-v1-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "wechirka-server-v1",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "MainLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/wechirka-server-v1/dev/1705781417328-2024-01-20T20:10:17.328Z/wechirka-server-v1.zip"
              },
              "Handler": "dist/serverless.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "wechirka-server-v1-dev-main",
              "MemorySize": 512,
              "Timeout": 15,
              "Environment": {
                "Variables": {
                  "SECRET_KEY": "6l9wa9SsJJlslo763xYKuU5O12PG",
                  "ACCESS_KEY_ID": "AKIAU5P4GNTCFKXU6GFS",
                  "SECRET_ACCESS_KEY": "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",
                  "REGION": "eu-central-1",
                  "GOOGLE_CLIENT_SECRET": "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",
                  "GOOGLE_CLIENT_ID": "389674739659-cq6hbi3kpcqem58qk6v34oskkvjjk5ok.apps.googleusercontent.com",
                  "GOOGLE_CALLBACK_URL": "https://pg78qwpfbg.execute-api.eu-central-1.amazonaws.com/default/wechirka-server-v1/users/google/redirect",
                  "FACEBOOK_ID": "163902460092671",
                  "FACEBOOK_SECRET": "cf49fe88f7f93847e23871567820896c",
                  "FACEBOOK_CALLBACK_URL": "https://pg78qwpfbg.execute-api.eu-central-1.amazonaws.com/default/wechirka-server-v1/users/facebook/redirect",
                  "BOT_TELEGRAM": "6466075221:AAF4BcsRJ9kFl63hG_AU-bvAa-vR_OE9R64",
                  "BOT_VIBER": "51c517dedc67e433-2810622e3b7155a2-a63799b35dba297f",
                  "FRONT_LINK": "https://www.wechirka.com/",
                  "BACK_LINK": "https://pg78qwpfbg.execute-api.eu-central-1.amazonaws.com/default/wechirka-server-v1",
                  "VIBER_ACCESS_TOKEN": "51c517dedc67e433-2810622e3b7155a2-a63799b35dba297f",
                  "CLOUDINARY_CLOUD_NAME": "dciy3u6un",
                  "CLOUDINARY_API_KEY": "882542473673359",
                  "CLOUDINARY_API_SECRET": "yqwS02uGAjiVsYkd-kn9Df-VaCk",
                  "AVATAR": "https://res.cloudinary.com/dciy3u6un/image/upload/v1701114073/service/kglf7c13u3aagffbdlmo.png",
                  "MASTER": "https://res.cloudinary.com/dciy3u6un/image/upload/v1701114073/service/kidn51ekkbiuqne4mbpl.jpg",
                  "NOREPLY_MAIL": "noreply@wechirka.com",
                  "NOREPLY_PASSWORD": "PQ4HHVA%",
                  "NGROK_AUTHTOKEN": "2Zu5t7NbioH6TDe8xUNaP2YhAIF_83Wi4oWAxWZrTfas5haji",
                  "CODE_LINK": "https://www.wechirka.com/sms-check",
                  "VIBER_AVATAR": "https://res.cloudinary.com/dciy3u6un/image/upload/v1701947849/service/paanrsds5krezvpreog0.webp"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "MainLogGroup"
            ]
          },
          "MainLambdaVersion0MntDdko0yBpR4J69WA8237dzKzbMLeQXHwtIqyMJY": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "MainLambdaFunction"
              },
              "CodeSha256": "7KHrE7R9iDqIzGlRI1pt7pUxUtmc4HrcLLo3wOASwxg="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-wechirka-server-v1",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "MainLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodProxyVarAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "MainLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "MainLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1705781345414": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodAny",
              "ApiGatewayMethodProxyVarAny"
            ]
          },
          "MainLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "MainLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-wechirka-server-v1-dev-ServerlessDeploymentBucketName"
            }
          },
          "MainLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "MainLambdaVersion0MntDdko0yBpR4J69WA8237dzKzbMLeQXHwtIqyMJY"
            },
            "Export": {
              "Name": "sls-wechirka-server-v1-dev-MainLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-wechirka-server-v1-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "main": {
        "handler": "dist/serverless.handler",
        "events": [
          {
            "http": {
              "method": "any",
              "path": "",
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "method": "any",
              "path": "{proxy+}",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "wechirka-server-v1-dev-main",
        "package": {},
        "memory": 512,
        "timeout": 15,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "MainLambdaVersion0MntDdko0yBpR4J69WA8237dzKzbMLeQXHwtIqyMJY"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "wechirka-server-v1",
      "frameworkVersion": "3",
      "useDotenv": true,
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "D:\\Projects\\things-backend\\.serverless\\wechirka-server-v1.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/wechirka-server-v1/dev/1705781417328-2024-01-20T20:10:17.328Z",
    "artifact": "wechirka-server-v1.zip"
  }
}