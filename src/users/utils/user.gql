# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

type Photo {
  publicId: String!
  url: String!
}

type Categories {
  _id: ID!
  name: String!
  subcategories: [Subcategory!]!
}

type Subcategory {
  id: ID!
  name: String!
}

type User {
  _id: ID!
  firstName: String!
  email: String!
  password: String!
  title: String!
  description: String!
  phone: String!
  telegram: String!
  tg_chat: Float!
  viber: String!
  viber_chat: String!
  whatsapp: String!
  location: String!
  master_photo: Photo!
  avatar: Photo!
  photo: [Photo!]!
  video: [Photo!]!
  category: [Categories!]!
  isOnline: Boolean!
  paid: Boolean!
  trial: Boolean!
  price: String!
  token: String!
  refresh_token: String!
  verified: String!
  verify: Boolean!
  googleId: String!
  facebookId: String!
  metaUrl: String!
  ban: Boolean!
  totalRating: Float!
  numberOfRatings: Float!
  agree_order: Float!
  disagree_order: Float!
  paidEnds: DateTime!
  register: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type search_result {
  totalPages: Float!
  currentPage: Float!
  data: [User!]!
}

type Live {
  _id: ID!
  author: String!
  avatar: String!
  content: String!
  image: String!
  date: DateTime!
  like: [String!]!
  dislikes: [String!]!
}

type search_live {
  totalPages: Float!
  currentPage: Float!
  data: [Live!]!
}

type Query {
  allUsers(query: SearchQuery!): search_result!
  user(id: String!): User!
  messages(query: SearchLive!): search_live!
}

input SearchQuery {
  req: String
  loc: String
  page: Float
  cat: String
  subcat: String
  limit: Float
}

input SearchLive {
  page: Float
  limit: Float
}

type Mutation {
  createUser(data: CreateUserDto!): User!
  deleteUser(password: PasswordUser!): User!
  createMessage(image: Upload, data: CreateLiveDto!): Live!
}

input CreateUserDto {
  email: String!
  password: String!
  firstName: String!
  phone: String!
}

input PasswordUser {
  password: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input CreateLiveDto {
  content: String!
  image: String
}